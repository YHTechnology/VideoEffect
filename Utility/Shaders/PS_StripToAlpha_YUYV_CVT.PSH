sampler2D Texture0:register (s0);
sampler2D Texture1:register (s1);
int choise        :register (c0);
bool bTex2        :register (c1);
float4 fAlpha	  :register (c2);

#include "colorspacefunc.inc"
float4 main( float2 texUV: TEXCOORD0 ):COLOR
{    
   float4 srcColor  = tex2D( Texture0,texUV ); 
   float4 srcAlpha  = bTex2?tex2D( Texture1,texUV ):1.0;     
   srcAlpha*=fAlpha.x;
	
//   srcColor.xyz = srcColor.xyw;   
//   srcColor.x   = srcColor.x - 0.0627;//
//   srcColor.y   = srcColor.y - 0.5;
//   srcColor.z   = srcColor.z - 0.5; 
//   srcColor.xyz = mul(matYUV2RGB,srcColor.xyz);  
//   srcColor.w=1.0f;
//   srcColor*=srcAlpha;
//	float4 alpha[3]; 
//   alpha[0] = srcColor.rrrr;
//   alpha[1] = srcColor.rrrr.gggg;
//   alpha[2] = srcColor.bbbb;  
//return  any(srcAlpha)?alpha[choise-1]:0.0;  
   
   float4 fColor[2];
   fColor[0].rgb=srcColor.xyw-float3(0.0f,0.5f,0.5f);
   fColor[1].rgb=srcColor.zyw-float3(0.0f,0.5f,0.5f);
	
   fColor[0].rgb= mul(matYUVA2RGBA,fColor[0].rgb)*srcAlpha.x; 
   fColor[1].rgb= mul(matYUVA2RGBA,fColor[1].rgb)*srcAlpha.z; 
   
   float4 alpha[3]; 
   alpha[0] = float4(fColor[0].rr,fColor[1].rr);
   alpha[1] = float4(fColor[0].gg,fColor[1].gg);
   alpha[2] = float4(fColor[0].bb,fColor[1].bb);    
   return alpha[choise-1];
}