//Error
//!!!!!!!!!!!!!!!!!!!!
//!将伪1６的YUYV的纹理转换成32位的RGBX
sampler    tx_YUYV       :register (s0);
float4     vSizeTex      :register (c0);//xy为纹理的物理宽高zw:z:虚拟宽 w:0.5/物理宽
float      fAlpha        :register (c1); 
#include   "ColorSpaceFunc.INC"
float4 main( float2 texUV: TEXCOORD0 ,float2 vpos:VPOS): COLOR
{ 
  float2 fUV= texUV; 
  int x  = texUV.x * vSizeTex.x -1.0;    
  fUV.x= texUV.x/2.0;   
  float4 sColor_YUYV  = tex2D( tx_YUYV, fUV ); 
  float4 retColor   = 1.0;
  //if(x%2)
  if(vpos.x%2)
  {
    retColor.xyz = float3(sColor_YUYV.g,sColor_YUYV.b,sColor_YUYV.r);
  }
  else
  {
    retColor.xyz = float3(sColor_YUYV.a,sColor_YUYV.b,sColor_YUYV.r);
  } 
  retColor.xyz = ColorSpace_YUVToRGB(retColor.xyz-CS_YUVA_OFFSET)*fAlpha;   
  return float4(retColor.xyz,1.0);
}