sampler texSamples[8] :register(s0);//在下面的到上
float4  cMode         :register(c0);
float4  cbAlphaOK     :register(c1); 
float4  cAlphaValue   :register(c2);
float4  bIsBlended    :register(c3); 
bool4   pBlendMode      :register(c4);   
struct P_OUT
{
   float4 oColor : COLOR0;//Color  
};
#include "VComposeFunc.INC"
P_OUT main( float2 texUV0: TEXCOORD0 )
{     
   P_OUT ret;   
   float4  sAlpha0 = cbAlphaOK[0]?tex2D( texSamples[1], texUV0 )*cAlphaValue[0]:cAlphaValue[0];
   float4  sColor0 = tex2D( texSamples[0], texUV0 )-cMode;
     sColor0  =  (pBlendMode[0]||bIsBlended[0])?sColor0:sAlpha0*sColor0;
   
   float4  sAlpha1 = cbAlphaOK[1]?tex2D( texSamples[3], texUV0 )*cAlphaValue[1]:cAlphaValue[1];       
   float4  sColor1 = tex2D( texSamples[2], texUV0 )-cMode;
           sColor1 = bIsBlended[1]?sColor1*cAlphaValue[1]:sColor1*sAlpha1;
           
   float4  sAlpha2 = cbAlphaOK[2]?tex2D( texSamples[5], texUV0 )*cAlphaValue[2]:cAlphaValue[2];
   float4  sColor2 = tex2D( texSamples[4], texUV0 )-cMode;
           sColor2 = bIsBlended[2]?sColor2*cAlphaValue[2]:sColor2*sAlpha2;
   
   float4  sAlpha3 = cbAlphaOK[3]?tex2D( texSamples[7], texUV0 )*cAlphaValue[3]:cAlphaValue[3];
   float4  sColor3 = tex2D( texSamples[6], texUV0 )-cMode;
           sColor3 = bIsBlended[3]?sColor3*cAlphaValue[3]:sColor3*sAlpha3;
   
   T_Color rColor  = Color_Blend(sColor0,sAlpha0, sColor1,sAlpha1,pBlendMode[1]); 
           rColor  = Color_Blend( rColor.tColor,rColor.tAlpha ,sColor2,sAlpha2,pBlendMode[2]); 
           rColor  = Color_Blend( rColor.tColor,rColor.tAlpha ,sColor3,sAlpha3,pBlendMode[3]);    
   ret.oColor      =  rColor.tColor + cMode;    
   return ret;
}