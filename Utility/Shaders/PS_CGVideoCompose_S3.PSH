sampler texSamples[8] :register(s0);//在下面的到上
bool4   bAlphaOK      :register(c0);
float4  cMode         :register(c1);
float4  vAlphas       :register(c2);//Video的AlphaValue值 
float   cgAlpahV      :register(c3);//CG的AlphaValue值
bool    bSourceBlended:register(c4);

struct P_OUT
{
   float4 oColor : COLOR0;//Color
};

struct T_Color 
{
   float4 tColor;//Color
   float4 tAlpha;//Alpha
};

#include "CGVComposeFunc.INC"

P_OUT main( float2 texUV0: TEXCOORD0 )
{     
   P_OUT ret; T_Color tColor;
   float4  sColor0    = tex2D( texSamples[0],    texUV0 )-cMode; 
   float4  sAlpha0    = bAlphaOK[0]?tex2D( texSamples[1],    texUV0 )*vAlphas[0]:vAlphas[0];   
   float4  sColor1    = tex2D( texSamples[2],    texUV0 )-cMode;	 
   float4  sAlpha1    = bAlphaOK[1]?tex2D( texSamples[3],    texUV0 )*vAlphas[1]:vAlphas[1];             
   float4  sColor2    = tex2D( texSamples[4],    texUV0 )-cMode; 
   float4  sAlpha2    = bAlphaOK[2]?tex2D( texSamples[5],    texUV0 )*vAlphas[2]:vAlphas[2];       
   float4  sColor_CG  = tex2D( texSamples[6],    texUV0 )-cMode;   
   float4  sAlpha_CG  = tex2D( texSamples[7],    texUV0 );
      
   tColor = Blend(sColor0,sAlpha0,sColor1,sAlpha1);
   tColor = Blend(tColor.tColor,tColor.tAlpha,sColor2,sAlpha2);
   tColor = BlendC(tColor.tColor,tColor.tAlpha,sColor_CG,sAlpha_CG);  
     ret.oColor = any(tColor.tAlpha)?tColor.tColor*tColor.tAlpha +cMode:cMode; 
   return ret;
}