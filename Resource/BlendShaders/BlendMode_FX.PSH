sampler2D sColor0;
sampler2D sAlpha0;
sampler2D sColor1;
sampler2D sAlpha1;
sampler2D sColor2;
sampler2D sAlpha2;
sampler2D sColor3;
sampler2D sAlpha3;
float4  bAlphaExisted:register(c0);
float4  bAlphaValue  :register(c1);

 

void BeginFragmentFX( float2 vTexCoord: TEXCOORD0,
                      inout float4 retColor:COLOR0,
					  inout float4 retAlpha:COLOR1 ) 
{
    retColor = tex2D(sColor0,vTexCoord)-float4(0.0,0.5,0.0,0.5);
    retAlpha = bAlphaExisted[0]?tex2D(sAlpha0,vTexCoord)*bAlphaValue[0]:bAlphaValue[0];
}
pixelfragment BeginFX = compile_fragment ps_2_0 BeginFragmentFX();


void EndFragmentFX( inout float4 retColor:COLOR0, inout float4 retAlpha:COLOR1 )
{
    retColor =  retColor + float4(0.0,0.5,0.0,0.5);
    retAlpha =  retAlpha + float4(0.0,0.0,0.0,0.0);
}

pixelfragment EndFX = compile_fragment ps_2_0 EndFragmentFX();


//--------------------ADD------------------------------
void BlendMode_ADDFragment_Stage_1( float2 texCoord:TEXCOORD0,                           
                                    inout float4 retColor:COLOR0,
                                    inout float4 retAlpha:COLOR1 )
{
   float4  sColor = tex2D(sColor1,texCoord)-float4(0.0,0.5,0.0,0.5);
   float4  sAlpha = bAlphaExisted[1]?tex2D(sAlpha1,texCoord)*bAlphaValue[1]:bAlphaValue[1];
   retColor  = retColor + sColor;
   retAlpha  = sAlpha + retAlpha- retAlpha * sAlpha;  
}
pixelfragment BlendMode_Add_Stage_1 = compile_fragment ps_2_0 BlendMode_ADDFragment_Stage_1();


void BlendMode_ADDFragment_Stage_2( float2 texCoord:TEXCOORD0,                           
                                    inout float4 retColor:COLOR0,
                                    inout float4 retAlpha:COLOR1 )
{
   float4  sColor = tex2D(sColor2,texCoord)-float4(0.0,0.5,0.0,0.5);
   float4  sAlpha = bAlphaExisted[2]?tex2D(sAlpha2,texCoord)*bAlphaValue[2]:bAlphaValue[2];
   retColor  = retColor + sColor;
   retAlpha  = sAlpha + retAlpha- retAlpha * sAlpha;  
}
pixelfragment BlendMode_Add_Stage_2 = compile_fragment ps_2_0 BlendMode_ADDFragment_Stage_2();

void BlendMode_ADDFragment_Stage_3( float2 texCoord:TEXCOORD0,                           
                                    inout float4 retColor:COLOR0,
                                    inout float4 retAlpha:COLOR1 )
{
   float4  sColor = tex2D(sColor3,texCoord)-float4(0.0,0.5,0.0,0.5);
   float4  sAlpha = bAlphaExisted[3]?tex2D(sAlpha3,texCoord)*bAlphaValue[3]:bAlphaValue[3];
   retColor  = retColor + sColor;
   retAlpha  = sAlpha + retAlpha- retAlpha * sAlpha;  
}
pixelfragment BlendMode_Add_Stage_3 = compile_fragment ps_2_0 BlendMode_ADDFragment_Stage_3();

//--------------------MUL------------------------------
void BlendMode_MULFragment_Stage_1( float2 texCoord:TEXCOORD0,                           
                                    inout float4 retColor:COLOR0,
                                    inout float4 retAlpha:COLOR1 )
{
   float4  sColor = tex2D(sColor1,texCoord)-float4(0.0,0.5,0.0,0.5);
   float4  sAlpha = bAlphaExisted[1]?tex2D(sAlpha1,texCoord)*bAlphaValue[1]:bAlphaValue[1];
   retColor  = retColor * sColor;
   retAlpha  = sAlpha + retAlpha- retAlpha * sAlpha;  
}
pixelfragment BlendMode_MUL_Stage_1 = compile_fragment ps_2_0 BlendMode_MULFragment_Stage_1();


void BlendMode_MULFragment_Stage_2( float2 texCoord:TEXCOORD0,                           
                                    inout float4 retColor:COLOR0,
                                    inout float4 retAlpha:COLOR1 )
{
   float4  sColor = tex2D(sColor2,texCoord)-float4(0.0,0.5,0.0,0.5);
   float4  sAlpha = bAlphaExisted[2]?tex2D(sAlpha2,texCoord)*bAlphaValue[2]:bAlphaValue[2];
   retColor  = retColor * sColor;
   retAlpha  = sAlpha + retAlpha- retAlpha * sAlpha;  
}
pixelfragment BlendMode_MUL_Stage_2 = compile_fragment ps_2_0 BlendMode_MULFragment_Stage_2();

void BlendMode_MULFragment_Stage_3( float2 texCoord:TEXCOORD0,                           
                                    inout float4 retColor:COLOR0,
                                    inout float4 retAlpha:COLOR1 )
{
   float4  sColor = tex2D(sColor3,texCoord)-float4(0.0,0.5,0.0,0.5);
   float4  sAlpha = bAlphaExisted[3]?tex2D(sAlpha3,texCoord)*bAlphaValue[3]:bAlphaValue[3];
   retColor  = retColor * sColor;
   retAlpha  = sAlpha + retAlpha- retAlpha * sAlpha;  
}
pixelfragment BlendMode_MUL_Stage_3 = compile_fragment ps_2_0 BlendMode_MULFragment_Stage_3();
 
 