#include "..\shaders\ColorSpaceFunc.INC"

sampler2D samColor0    :register(s0);
sampler2D samAlpha0    :register(s1);
sampler2D samColor1    :register(s2);
sampler2D samAlpha1    :register(s3);
bool4  bAlphaExisted :register(c0);
float4  bAlphaValue  :register(c1);
float2 fBlendValues  :register(c2);
struct P_OUT
{
   float4 oColor : COLOR0;//Color
   float4 oAlpha : COLOR1;//Alpha
};

P_OUT main( float2 texCoord:TEXCOORD0 )
{
   P_OUT retColor;   
   float4 sAlpha0 = bAlphaExisted[0]?tex2D(samAlpha0,texCoord)*bAlphaValue[0]:bAlphaValue[0];    
   float4 sColor0 = tex2D(samColor0,texCoord)-CS_YUYV_OFFSET;
   sColor0 *= sAlpha0.rrbr*fBlendValues[0];
   
   float4 sAlpha1 = bAlphaExisted[1]?tex2D(samAlpha1,texCoord)*bAlphaValue[1]:bAlphaValue[1];    
   float4 sColor1 = tex2D(samColor1,texCoord)-CS_YUYV_OFFSET;
   sColor1 = sAlpha1.rrbr*sColor1*fBlendValues[1];
         
   retColor.oAlpha  =  sAlpha0 + sAlpha1- sAlpha0 * sAlpha1; 
   retColor.oColor    = sColor0 +sColor1+CS_YUYV_OFFSET;
 
   return retColor;  
}


 