sampler texSamples[6] :register(s0);//在下面的到上
float4  cMode         :register(c0);
float4  cbAlphaOK     :register(c1); 
float4  cAlphaValue   :register(c2); 
 
struct P_OUT
{
   float4 oColor : COLOR0;//Color
   float4 oAlpha : COLOR1;//Alpha 
};

P_OUT main( float2 texUV0: TEXCOORD0  )
{     
   P_OUT ret;   
   float4  sColor0 = tex2D( texSamples[0], texUV0 )-cMode;
   float4  sAlpha0 = cbAlphaOK[0]?tex2D( texSamples[1], texUV0 )*cAlphaValue[0]:cAlphaValue[0];  
   float4  sColor1 = tex2D( texSamples[2], texUV0 )-cMode;
   float4  sAlpha1 = cbAlphaOK[1]?tex2D( texSamples[3], texUV0 )*cAlphaValue[1]:cAlphaValue[1]; 
   float4  sColor2 = tex2D( texSamples[4], texUV0 )-cMode;
   float4  sAlpha2 = cbAlphaOK[2]?tex2D( texSamples[5], texUV0 )*cAlphaValue[2]:cAlphaValue[2];
   float4 mAlpha   =  sAlpha0 + sAlpha1- sAlpha0 * sAlpha1;              
   float4 mColor   =  any(sAlpha0)?sColor0 + ( sColor1-sColor0 )*sAlpha1/mAlpha:sColor1;
   
   ret.oAlpha      =  mAlpha + sAlpha2- sAlpha2 * mAlpha;              
   ret.oColor      =  (any(mAlpha)?mColor + ( sColor2-mColor )*sAlpha2/ret.oAlpha:sColor2)+cMode;   
   return ret;
}